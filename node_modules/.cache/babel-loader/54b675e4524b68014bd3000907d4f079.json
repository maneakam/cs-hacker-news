{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maneakam/Sapient/Sape-CaseStudy-HackerNews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nexport default function () {\n  for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n\n  var API = params[0];\n  var data = \"?\";\n\n  if (params[0]) {\n    for (var key in params[0]) {\n      data = \"\".concat(data).concat(key, \"=\").concat(params[0][key], \"&\");\n    }\n  }\n\n  function postData() {\n    var url,\n        data,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.async(function postData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\".concat(API);\n            data = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"\".concat(data);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              // *GET, POST, PUT, DELETE, etc.\n              mode: 'cors',\n              // no-cors, *cors, same-origin\n              cache: 'no-cache',\n              // *default, no-cache, reload, force-cache, only-if-cached\n              credentials: 'same-origin',\n              // include, *same-origin, omit\n              headers: {\n                'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n              },\n              redirect: 'follow',\n              // manual, *follow, error\n              referrerPolicy: 'no-referrer',\n              // no-referrer, *client\n              body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n            }));\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  } //return fetch(`${API}${data}`);\n\n}","map":{"version":3,"sources":["/Users/maneakam/Sapient/Sape-CaseStudy-HackerNews/src/components/js/AppService.js"],"names":["params","API","data","key","postData","url","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json"],"mappings":";AAAA,eAAe,YAAqB;AAAA,oCAARA,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AAChC,MAAMC,GAAG,GAAGD,MAAM,CAAC,CAAD,CAAlB;AAEA,MAAIE,IAAI,GAAG,GAAX;;AAEA,MAAIF,MAAM,CAAC,CAAD,CAAV,EAAe;AACX,SAAK,IAAIG,GAAT,IAAgBH,MAAM,CAAC,CAAD,CAAtB,EAA2B;AACvBE,MAAAA,IAAI,aAAMA,IAAN,SAAaC,GAAb,cAAoBH,MAAM,CAAC,CAAD,CAAN,CAAUG,GAAV,CAApB,MAAJ;AACH;AACJ;;AAED,WAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,YAAAA,GAAxB,qEAAiCJ,GAAjC;AAAwCC,YAAAA,IAAxC,qEAAkDA,IAAlD;AAAA;AAAA,6CAE2BI,KAAK,CAACD,GAAD,EAAM;AAChCE,cAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,cAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,cAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,cAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,cAAAA,OAAO,EAAE;AACP,gCAAgB,kBADT,CAEP;;AAFO,eALuB;AAShCC,cAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,cAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf,CAX0B,CAWL;;AAXK,aAAN,CAFhC;;AAAA;AAEUe,YAAAA,QAFV;AAAA,6CAeWA,QAAQ,CAACC,IAAT,EAfX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAXgC,CA6BhC;;AACH","sourcesContent":["export default function (...params) {\n    const API = params[0];\n\n    let data = \"?\";\n\n    if (params[0]) {\n        for (let key in params[0]) {\n            data = `${data}${key}=${params[0][key]}&`;\n        }\n    }\n\n    async function postData(url = `${API}`, data = `${data}`) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n      }\n\n    //return fetch(`${API}${data}`);\n}\n"]},"metadata":{},"sourceType":"module"}