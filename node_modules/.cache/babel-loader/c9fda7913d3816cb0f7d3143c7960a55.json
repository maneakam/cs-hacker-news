{"ast":null,"code":"import _regeneratorRuntime from \"/Users/maneakam/Sapient/Sape-CaseStudy-HackerNews/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport AppService from './AppService';\nvar AppEngine = {\n  init: function init() {\n    var data = \"?\";\n\n    if (params[0]) {\n      for (var key in params[0]) {\n        data = \"\".concat(data).concat(key, \"=\").concat(params[0][key], \"&\");\n      }\n    }\n\n    function postData() {\n      var url,\n          data,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.async(function postData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\".concat(API);\n              data = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"\".concat(data);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url, {\n                method: 'POST',\n                // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors',\n                // no-cors, *cors, same-origin\n                cache: 'no-cache',\n                // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: 'same-origin',\n                // include, *same-origin, omit\n                headers: {\n                  'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n                },\n                redirect: 'follow',\n                // manual, *follow, error\n                referrerPolicy: 'no-referrer',\n                // no-referrer, *client\n                body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n              }));\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response.json());\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n\n    postData(\"\".concat(API), \"\".concat(data)).then(function (data) {\n      console.log(data); // JSON data parsed by `response.json()` call\n    });\n  }\n};\nexport default AppEngine;","map":{"version":3,"sources":["/Users/maneakam/Sapient/Sape-CaseStudy-HackerNews/src/components/js/AppEngine.js"],"names":["AppService","AppEngine","init","data","params","key","postData","url","API","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","then","console","log"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,gBAAY;AACd,QAAIC,IAAI,GAAG,GAAX;;AAEJ,QAAIC,MAAM,CAAC,CAAD,CAAV,EAAe;AACX,WAAK,IAAIC,GAAT,IAAgBD,MAAM,CAAC,CAAD,CAAtB,EAA2B;AACvBD,QAAAA,IAAI,aAAMA,IAAN,SAAaE,GAAb,cAAoBD,MAAM,CAAC,CAAD,CAAN,CAAUC,GAAV,CAApB,MAAJ;AACH;AACJ;;AAED,aAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,cAAAA,GAAxB,qEAAiCC,GAAjC;AAAwCL,cAAAA,IAAxC,qEAAkDA,IAAlD;AAAA;AAAA,+CAE2BM,KAAK,CAACF,GAAD,EAAM;AAChCG,gBAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,gBAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,gBAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,gBAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,kBADT,CAEP;;AAFO,iBALuB;AAShCC,gBAAAA,QAAQ,EAAE,QATsB;AASZ;AACpBC,gBAAAA,cAAc,EAAE,aAVgB;AAUD;AAC/BC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAX0B,CAWL;;AAXK,eAAN,CAFhC;;AAAA;AAEUiB,cAAAA,QAFV;AAAA,+CAeWA,QAAQ,CAACC,IAAT,EAfX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBAf,IAAAA,QAAQ,WAAIE,GAAJ,aAAcL,IAAd,EAAR,CACKmB,IADL,CACU,UAACnB,IAAD,EAAU;AAChBoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ,EADgB,CACG;AACtB,KAHD;AAIC;AAhCa,CAAlB;AAmCA,eAAeF,SAAf","sourcesContent":["import AppService from './AppService';\n\nconst AppEngine = {\n    init: function () {\n        let data = \"?\";\n\n    if (params[0]) {\n        for (let key in params[0]) {\n            data = `${data}${key}=${params[0][key]}&`;\n        }\n    }\n\n    async function postData(url = `${API}`, data = `${data}`) {\n        // Default options are marked with *\n        const response = await fetch(url, {\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors', // no-cors, *cors, same-origin\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin', // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *client\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData(`${API}`, `${data}`)\n        .then((data) => {\n        console.log(data); // JSON data parsed by `response.json()` call\n    });\n    }\n}\n\nexport default AppEngine;\n"]},"metadata":{},"sourceType":"module"}